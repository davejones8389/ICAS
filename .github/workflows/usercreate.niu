name: Publish

on:
  push:
    branches:
   #   - 'main'
   #   - '!test'
   #   - '!development'
   #   - '*'
env:
  SQL_RESOURCE_GROUP_NAME: mssql-demo
  SQL_SERVER_NAME: mssql-demo-dev
  FQ_SQL_SERVER_NAME: mssql-demo-dev.database.windows.net
  SQL_DATABASE_NAME: ${GITHUB_REF#refs/*/}
  SQL_USERNAME: ${{secrets.SQL_USERNAME}}
  SQL_PASSWORD: ${{secrets.SQL_PASSWORD}}

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
  #  - uses: actions/checkout@v3
  #    with:
  #      submodules: 'true'
     
  #  - name: Setup dotnet 6.0
  ##    uses: actions/setup-dotnet@v2
 #     with:
 #       dotnet-version: '6.0.x'

#    - name: dotnet build
 #     run: dotnet build

    - name: Install Packages
      run: |
        curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
        sudo apt-get update
        sudo apt-get install -y wget apt-transport-https software-properties-common
        wget -q https://packages.microsoft.com/config/ubuntu/18.04/packages-microsoft-prod.deb
        sudo dpkg -i packages-microsoft-prod.deb
        
        curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
        curl https://packages.microsoft.com/config/ubuntu/20.04/prod.list | sudo tee /etc/apt/sources.list.d/msprod.list
        sudo apt-get update
        sudo add-apt-repository universe
        sudo apt-get install -y powershell
        sudo apt-get install azure-cli
        sudo apt-get install mssql-tools unixodbc-dev
        sudo apt-get install mssql-tools

  process: 
    runs-on: ubuntu-latest

    steps:

    - name: Generate random password
      run: |
         $password = -join ((65..90) + (97..122) | Get-Random -Count 32 | % {[char]$_});
         $password = $password -replace '^(.)','%';
         echo "PASSWORD=$password" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
      shell: pwsh

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: Create keyvault secret
      uses: azure/CLI@v1
      with:
        inlineScript: |
         az keyvault secret set --name ${GITHUB_REF#refs/*/} --vault-name davejoneskv123 --value $PASSWORD
    
    - name: Add SQL IP Access
      uses: azure/CLI@v1
      with:
        inlineScript: |
          IP=$(curl ipinfo.io/ip)
          az sql server firewall-rule create -n ${GITHUB_REF#refs/*/} --resource-group $SQL_RESOURCE_GROUP_NAME --server $SQL_SERVER_NAME --start-ip-address $IP --end-ip-address $IP
    
    - name: Install SQLCMD, Create SQL User
      run: |
         sqlcmd -S $FQ_SQL_SERVER_NAME -d ${GITHUB_REF#refs/*/} -U $SQL_USERNAME -P $SQL_PASSWORD -Q "
           IF NOT EXISTS (SELECT  [name]     
            FROM   sys.database_principals      
            WHERE   [name] = '${GITHUB_REF#refs/*/}'   )  
          BEGIN  
          CREATE USER [${GITHUB_REF#refs/*/}] with password = '$PASSWORD'
          END
           ALTER ROLE db_datareader ADD MEMBER [${GITHUB_REF#refs/*/}]; 
           ALTER ROLE db_datawriter ADD MEMBER [${GITHUB_REF#refs/*/};] 
           ALTER ROLE db_ddladmin ADD MEMBER [${GITHUB_REF#refs/*/}];"
      #shell: pwsh
  
    - name: Remove SQL IP Access
      uses: azure/CLI@v1
      with:
        inlineScript: |
          az sql server firewall-rule delete -n ${GITHUB_REF#refs/*/} --resource-group $SQL_RESOURCE_GROUP_NAME --server $SQL_SERVER_NAME 
        


{
	"name": "PL_FileValidation",
	"properties": {
		"activities": [
			{
				"name": "Get File Metadata",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "DS_DataFile",
						"type": "DatasetReference",
						"parameters": {
							"Container": "raw",
							"FolderName": {
								"value": "@substring(pipeline().parameters.Source, add(lastIndexOf(pipeline().parameters.Source, '/'),1),sub(sub(length(pipeline().parameters.Source),1),lastIndexOf(pipeline().parameters.Source,'/')))",
								"type": "Expression"
							},
							"FileName": {
								"value": "@pipeline().parameters.TriggeringFile",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"itemName",
						"structure",
						"itemType",
						"size",
						"columnCount"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "Get Template Metadata",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "DS_TemplateFile",
						"type": "DatasetReference",
						"parameters": {
							"Container": "templates",
							"FolderName": {
								"value": "@substring(pipeline().parameters.Source, add(lastIndexOf(pipeline().parameters.Source, '/'),1),sub(sub(length(pipeline().parameters.Source),1),lastIndexOf(pipeline().parameters.Source,'/')))",
								"type": "Expression"
							},
							"FileName": "InputTemplate.txt"
						}
					},
					"fieldList": [
						"structure",
						"columnCount"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "Create Audit Record",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Get File Metadata",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Get Template Metadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[audit].[CreateADFAuditRecord]",
					"storedProcedureParameters": {
						"ColumnCount": {
							"value": {
								"value": "@activity('Get File Metadata').output.columnCount",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"ExpectedColumnCount": {
							"value": {
								"value": "@activity('Get Template Metadata').output.columnCount",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"ExpectedStructure": {
							"value": {
								"value": "@join(activity('Get Template Metadata').output.structure,',')",
								"type": "Expression"
							},
							"type": "String"
						},
						"FileName": {
							"value": {
								"value": "@activity('Get File Metadata').output.itemName",
								"type": "Expression"
							},
							"type": "String"
						},
						"FileType": {
							"value": {
								"value": "@activity('Get File Metadata').output.itemType",
								"type": "Expression"
							},
							"type": "String"
						},
						"Size": {
							"value": {
								"value": "@activity('Get File Metadata').output.size",
								"type": "Expression"
							},
							"type": "String"
						},
						"Source": {
							"value": {
								"value": "@substring(pipeline().parameters.Source, add(lastIndexOf(pipeline().parameters.Source, '/'),1),sub(sub(length(pipeline().parameters.Source),1),lastIndexOf(pipeline().parameters.Source,'/')))",
								"type": "Expression"
							},
							"type": "String"
						},
						"Structure": {
							"value": {
								"value": "@join(activity('Get File Metadata').output.structure,',')",
								"type": "Expression"
							},
							"type": "String"
						},
						"DataFactory_Name": {
							"value": {
								"value": "@pipeline().DataFactory",
								"type": "Expression"
							},
							"type": "String"
						},
						"Pipeline_Name": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "String"
						},
						"RunID": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "icaswf_datafactory_development_database",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "If Condition",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Create Audit Record",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(activity('Get File Metadata').output.structure , activity('Get Template Metadata').output.structure)",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Copy Error",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": true,
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "DS_DataFile",
									"type": "DatasetReference",
									"parameters": {
										"Container": "raw",
										"FolderName": {
											"value": "@substring(pipeline().parameters.Source, add(lastIndexOf(pipeline().parameters.Source, '/'),1),sub(sub(length(pipeline().parameters.Source),1),lastIndexOf(pipeline().parameters.Source,'/')))",
											"type": "Expression"
										},
										"FileName": {
											"value": "@activity('Get File Metadata').output.itemName",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DS_DataFile",
									"type": "DatasetReference",
									"parameters": {
										"Container": "error",
										"FolderName": {
											"value": "@substring(pipeline().parameters.Source, add(lastIndexOf(pipeline().parameters.Source, '/'),1),sub(sub(length(pipeline().parameters.Source),1),lastIndexOf(pipeline().parameters.Source,'/')))",
											"type": "Expression"
										},
										"FileName": {
											"value": "@activity('Get File Metadata').output.itemName",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Delete Raw Fail",
							"type": "Delete",
							"dependsOn": [
								{
									"activity": "Copy Error",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "DS_DataFile",
									"type": "DatasetReference",
									"parameters": {
										"Container": "raw",
										"FolderName": {
											"value": "@substring(pipeline().parameters.Source, add(lastIndexOf(pipeline().parameters.Source, '/'),1),sub(sub(length(pipeline().parameters.Source),1),lastIndexOf(pipeline().parameters.Source,'/')))",
											"type": "Expression"
										},
										"FileName": {
											"value": "@activity('Get File Metadata').output.itemName",
											"type": "Expression"
										}
									}
								},
								"enableLogging": false,
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							}
						},
						{
							"name": "Update Audit Failed",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Delete Raw Fail",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[audit].[UpdateADFAuditRecord]",
								"storedProcedureParameters": {
									"ErrorFlag": {
										"value": "1",
										"type": "Int32"
									},
									"FileName": {
										"value": {
											"value": "@activity('Get File Metadata').output.itemName",
											"type": "Expression"
										},
										"type": "String"
									},
									"Source": {
										"value": {
											"value": "@substring(pipeline().parameters.Source, add(lastIndexOf(pipeline().parameters.Source, '/'),1),sub(sub(length(pipeline().parameters.Source),1),lastIndexOf(pipeline().parameters.Source,'/')))",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "icaswf_datafactory_development_database",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Send email for failed validation",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "Update Audit Failed",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "PL_SendEmailNotification_Generic",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"NotificationMailAddressList": {
										"value": "@pipeline().parameters.NotificationMailAddressList",
										"type": "Expression"
									},
									"ParentPipelineName": "PL_FileValidation",
									"ParentPipelineStatus": "Failed",
									"MessageContentSP": "EMailNotification_PLClientDataFileValidation",
									"MessageSubject": "Data Validation Summary of Uploaded File",
									"ParentPipelineRunId": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									}
								}
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Copy Cleansed",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": true,
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "DS_DataFile",
									"type": "DatasetReference",
									"parameters": {
										"Container": "raw",
										"FolderName": {
											"value": "@substring(pipeline().parameters.Source, add(lastIndexOf(pipeline().parameters.Source, '/'),1),sub(sub(length(pipeline().parameters.Source),1),lastIndexOf(pipeline().parameters.Source,'/')))",
											"type": "Expression"
										},
										"FileName": {
											"value": "@activity('Get File Metadata').output.itemName",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DS_DataFile",
									"type": "DatasetReference",
									"parameters": {
										"Container": "cleansed",
										"FolderName": {
											"value": "@substring(pipeline().parameters.Source, add(lastIndexOf(pipeline().parameters.Source, '/'),1),sub(sub(length(pipeline().parameters.Source),1),lastIndexOf(pipeline().parameters.Source,'/')))",
											"type": "Expression"
										},
										"FileName": {
											"value": "@activity('Get File Metadata').output.itemName",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Delete Raw Success",
							"type": "Delete",
							"dependsOn": [
								{
									"activity": "Copy Cleansed",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "DS_DataFile",
									"type": "DatasetReference",
									"parameters": {
										"Container": "raw",
										"FolderName": {
											"value": "@substring(pipeline().parameters.Source, add(lastIndexOf(pipeline().parameters.Source, '/'),1),sub(sub(length(pipeline().parameters.Source),1),lastIndexOf(pipeline().parameters.Source,'/')))",
											"type": "Expression"
										},
										"FileName": {
											"value": "@activity('Get File Metadata').output.itemName",
											"type": "Expression"
										}
									}
								},
								"enableLogging": false,
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							}
						},
						{
							"name": "Update Audit Validated",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Delete Raw Success",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[audit].[UpdateADFAuditRecord]",
								"storedProcedureParameters": {
									"ErrorFlag": {
										"value": "0",
										"type": "Int32"
									},
									"FileName": {
										"value": {
											"value": "@activity('Get File Metadata').output.itemName",
											"type": "Expression"
										},
										"type": "String"
									},
									"Source": {
										"value": {
											"value": "@substring(pipeline().parameters.Source, add(lastIndexOf(pipeline().parameters.Source, '/'),1),sub(sub(length(pipeline().parameters.Source),1),lastIndexOf(pipeline().parameters.Source,'/')))",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "icaswf_datafactory_development_database",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Send email for successful validation",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "Update Audit Validated",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "PL_SendEmailNotification_Generic",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"NotificationMailAddressList": {
										"value": "@pipeline().parameters.NotificationMailAddressList",
										"type": "Expression"
									},
									"ParentPipelineName": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"ParentPipelineStatus": "Success",
									"MessageContentSP": "EMailNotification_PLClientDataFileValidation",
									"MessageSubject": "Data Validation Summary of Uploaded File",
									"ParentPipelineRunId": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "Execute Copy to DB if exists",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "Send email for successful validation",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "PL_CheckFolder",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"Source": {
										"value": "@substring(pipeline().parameters.Source, add(lastIndexOf(pipeline().parameters.Source, '/'),1),sub(sub(length(pipeline().parameters.Source),1),lastIndexOf(pipeline().parameters.Source,'/')))",
										"type": "Expression"
									},
									"TriggeringFile": {
										"value": "@pipeline().parameters.TriggeringFile",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"Source": {
				"type": "string"
			},
			"TriggeringFile": {
				"type": "string"
			},
			"NotificationMailAddressList": {
				"type": "string",
				"defaultValue": "carsten.adams@kpmg.co.uk"
			}
		},
		"folder": {
			"name": "Pipeline Set 1: PL Client Data File"
		},
		"annotations": []
	}
}